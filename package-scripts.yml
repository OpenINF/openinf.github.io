scripts:
  compile:
    buildPortal: tsx build/tasks/compile/build-portal.mts
    scssify: tsx build/tasks/scssify.mts
    siteifyHealthFiles: tsx build/tasks/compile/siteify-health-files.mts
  verify:
    all: for i in build/tasks/verify/*.mts; do tsx "$i"; done
    css: tsx build/tasks/verify/verify-css.mts
    dockerfile: tsx build/tasks/verify/verify-dockerfile.mts
    html: tsx build/tasks/verify/verify-html.mts
    htmlValidForVNU: tsx build/tasks/verify/verify-html-valid-for-vnu.mts
    json: tsx build/tasks/verify/verify-json.mts
    md: tsx build/tasks/verify/verify-md.mts
    ruby: tsx build/tasks/verify/verify-ruby.mts
    svg: tsx build/tasks/verify/verify-svg.mts
    toml: tsx build/tasks/verify/verify-toml.mts
    ts: tsx build/tasks/verify/verify-ts.mts
    validForEC: tsx build/tasks/verify/verify-valid-for-ec.mts
    validForSC: tsx build/tasks/verify/verify-valid-for-sc.mts
    yaml: tsx build/tasks/verify/verify-yaml.mts
  format:
    all: for i in build/tasks/format/*.mts; do tsx "$i"; done
    css: tsx build/tasks/format/format-css.mts
    dockerfile: tsx build/tasks/format/format-dockerfile.mts
    html: tsx build/tasks/format/format-html.mts
    json: tsx build/tasks/format/format-json.mts
    md: tsx build/tasks/format/format-md.mts
    ruby: tsx build/tasks/format/format-ruby.mts
    svg: tsx build/tasks/format/format-svg.mts
    toml: tsx build/tasks/format/format-toml.mts
    ts: tsx build/tasks/format/format-ts.mts
    yaml: tsx build/tasks/format/format-yaml.mts
  build: nps compile.buildPortal
  test: nps verify.all
  start: bundle exec jekyll serve --drafts --incremental --force_polling --livereload --baseurl=''
  default: nps start
